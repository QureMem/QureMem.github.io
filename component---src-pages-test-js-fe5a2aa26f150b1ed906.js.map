{"version":3,"sources":["webpack:///./src/components/prompt.js","webpack:///./src/pages/test.js"],"names":["Prompt","surah","callback","transcript","start","end","currAya","setCurrAya","setParentResults","useState","mainField","setMainField","correct","setCorrect","results","setResults","inputRef","useRef","preprocess","txt","toLowerCase","replace","hasDiacritics","length","submitEventHandler","e","answer","preventDefault","res","push","style","direction","textAlign","marginBottom","marginTop","verses","onSubmit","display","justifyContent","className","onClick","marginLeft","src","margin","join","ref","value","onChange","val","target","pval","slice","console","log","a","c","ap","cp","trim","validator","dir","onBlur","current","focus","autoFocus","autoCorrect","marginRight","Test","location","state","askTranskript","navigate","tr2no","tr","title","nameTr","alt"],"mappings":"wLAuJeA,G,oBApJA,SAAC,GAST,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,WACAC,EAKI,EALJA,MACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACAC,EACI,EADJA,iBACI,EAC8BC,mBAAS,IAApCC,EADH,KACcC,EADd,OAE0BF,oBAAS,GAAhCG,EAFH,KAEYC,EAFZ,OAG0BJ,mBAAS,IAAhCK,EAHH,KAGYC,EAHZ,KAIEC,EAAWC,iBAAO,MAClBC,EAAa,SAAAC,GASjB,OAPIhB,EACIgB,EAAIC,cAEJD,EACHE,QAAQ,KAAM,IACdA,QAAQ,0DAA2D,KAIpEC,EAAgB,SAAAH,GACpB,OACEA,EACGE,QAAQ,KAAM,IACdA,QAAQ,0DAA2D,IACnEE,QAAUJ,EAAII,QAiCfC,EAAqB,SAACC,EAAUC,QAAkB,IAA5BD,MAAI,WAAwB,IAAlBC,MAAS,MACnC,OAAND,GAAYA,EAAEE,iBAClB,IAAIC,EAAMd,EACNY,EACFE,EAAIC,KAAKH,GAETE,EAAIC,KAAKnB,GAEXK,EAAWa,GACXpB,EAAiBoB,GACjBjB,EAAa,IACTL,EAAU,IAAMD,EAAKH,EAAS0B,GAC7BrB,GAAW,SAAAD,GAAO,OAAIA,EAAU,MAEvC,OACE,oCACGF,IAAUE,EAAU,EACP,IAAZA,EACE,wBACEwB,MAAO,CACLC,UAAW,MACXC,UAAW,SACXC,aAAc,SACdC,UAAW,WALf,0CAWA,wBACEJ,MAAO,CACLC,UAAW,MACXC,UAAW,SACXC,aAAc,SACdC,UAAW,WALf,IAQIjC,EAAMkC,OAAO7B,EAAU,GAAGH,GAR9B,KAWA,KACJ,0BACEiC,SAAU,SAAAX,GAAC,OAAID,EAAmBC,IAClCK,MAAO,CAAEO,QAAS,OAAQC,eAAgB,WAE1C,yBAAKC,UAAU,mBACZpC,EAAa,KACZ,yBAAKqC,QAAS,SAAAf,GAAC,OAAID,EAAmBC,IAAIK,MAAO,CAAEW,WAAY,IAC7D,yBACEC,IAAI,qEACJZ,MAAO,CAAEa,OAAQ,MAIvB,2BACEJ,UAAW,CAAC,YAAa3B,EAAU,UAAY,aAAagC,KAC1D,KAEFC,IAAK7B,EACL8B,MAAOpC,EACPqC,SAAU,SAAAtB,GAAC,OA1FH,SAAAA,GAChB,IAAIuB,EAAMvB,EAAEwB,OAAOH,MACfI,EAAOhC,EAAW8B,GACtB,GACEE,IACAhC,EAAWjB,EAAMkC,OAAO7B,GAASH,IAAagD,MAAM,EAAGD,EAAK3B,QAE5D6B,QAAQC,IAAIH,GACZE,QAAQC,IACNnC,EAAWjB,EAAMkC,OAAO7B,GAASH,IAAagD,MAAM,EAAGD,EAAK3B,SAG9DV,GAAW,GACXF,EAAaqC,OACR,CACLnC,GAAW,GACX,IAAIyC,EAAIN,EACJO,EAAItD,EAAMkC,OAAO7B,GAASH,GAC1BqD,EAAKtC,EAAW8B,GAChBS,EAAKvC,EAAWjB,EAAMkC,OAAO7B,GAASH,KAGtCA,IAAemB,EAAcgC,IAAME,EAAGjC,SAAWkC,EAAGlC,QACrDD,EAAcgC,IAAMA,EAAE/B,SAAWgC,EAAEhC,OAEpCC,EAAmB,KAAMwB,EAAIU,QAC1B/C,EAAaqC,IAgEGW,CAAUlC,IACzBmC,IAAKzD,EAAa,MAAQ,MAC1B0D,OAAQ,WACN7C,EAAS8C,QAAQC,SAEnBC,WAAS,EACTC,YAAY,QAGb9D,EACC,yBACEqC,QAAS,SAAAf,GAAC,OAAID,EAAmBC,IACjCK,MAAO,CAAEoC,YAAa,IAEtB,yBACExB,IAAI,wEACJZ,MAAO,CAAEa,OAAQ,MAGnB,UCnECwB,UArEF,SAAC,GAAkB,IAAD,UAAfC,EAAe,EAAfA,SACRnE,EAAK,UAAGmE,EAASC,aAAZ,aAAG,EAAgBpE,MACxBG,EAAK,UAAGgE,EAASC,aAAZ,aAAG,EAAgBjE,MACxBC,EAAG,UAAG+D,EAASC,aAAZ,aAAG,EAAgBhE,IACtBiE,EAAa,UAAGF,EAASC,aAAZ,aAAG,EAAgBC,cAJT,EAKC7D,mBAASL,EAAQ,GAAxCE,EALsB,KAKbC,EALa,OAMCE,mBAAS,IAAhCK,EANsB,KAMbC,EANa,KAQN,OAAnBqD,EAASC,OACXE,mBAAS,KAGX,IAAMC,EAAQ,SAAAC,GACZ,OAAOA,EAAK,EAAI,GAwBlB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAK,UAAEzE,aAAF,EAAEA,EAAO0E,cAAT,QAAmB,UAC7B,yBAAKpC,UAAU,aACb,sCACA,yBAAKA,UAAU,iBACb,4BAAKtC,aAAL,EAAKA,EAAO0E,QACZ,4BACGrE,EAAU,EADb,IACiBD,IAGnB,kBAAC,EAAD,CACEJ,MAAOA,EACPE,WAAYqE,EAAMF,GAClBlE,MAAOA,EACPC,IAAKA,EACLH,SAtCe,SAAA0B,GACrB2C,mBAAS,YAAa,CACpBF,MAAO,CACLpE,QACAE,WAAYqE,EAAMF,GAClBxD,QAASc,EACTxB,QACAC,UAgCEC,QAASA,EACTC,WAAYA,EACZC,iBAAkBO,IAEpB,yBAAKwB,UAAU,eACb,yBACEG,IAAI,8EACJF,QAAS,WAlCjB+B,mBAAS,YAAa,CACpBF,MAAO,CACLpE,QACAE,WAAYqE,EAAMF,GAClBxD,QAASA,EACTV,QACAC,IAAKC,EAAU,MA6BXsE,IAAI","file":"component---src-pages-test-js-fe5a2aa26f150b1ed906.js","sourcesContent":["import React, { useState, useRef } from \"react\"\nimport \"../pages/main.css\"\n\nconst Prompt = ({\n  surah,\n  callback,\n  transcript,\n  start,\n  end,\n  currAya,\n  setCurrAya,\n  setParentResults,\n}) => {\n  const [mainField, setMainField] = useState(\"\")\n  const [correct, setCorrect] = useState(true)\n  const [results, setResults] = useState([])\n  const inputRef = useRef(null)\n  const preprocess = txt => {\n    let ret\n    if (transcript) {\n      ret = txt.toLowerCase()\n    } else {\n      ret = txt\n        .replace(\" ۖ\", \"\")\n        .replace(/([^\\u0621-\\u063A\\u0641-\\u064A\\u0660-\\u0669a-zA-Z 0-9])/g, \"\")\n    }\n    return ret\n  }\n  const hasDiacritics = txt => {\n    return (\n      txt\n        .replace(\" ۖ\", \"\")\n        .replace(/([^\\u0621-\\u063A\\u0641-\\u064A\\u0660-\\u0669a-zA-Z 0-9])/g, \"\")\n        .length != txt.length\n    )\n  }\n  const validator = e => {\n    let val = e.target.value\n    let pval = preprocess(val)\n    if (\n      pval !==\n      preprocess(surah.verses[currAya][transcript]).slice(0, pval.length)\n    ) {\n      console.log(pval)\n      console.log(\n        preprocess(surah.verses[currAya][transcript]).slice(0, pval.length)\n      )\n\n      setCorrect(false)\n      setMainField(val)\n    } else {\n      setCorrect(true)\n      let a = val\n      let c = surah.verses[currAya][transcript]\n      let ap = preprocess(val)\n      let cp = preprocess(surah.verses[currAya][transcript])\n\n      if (\n        (!transcript && !hasDiacritics(a) && ap.length === cp.length) ||\n        (hasDiacritics(a) && a.length === c.length)\n      )\n        submitEventHandler(null, val.trim())\n      else setMainField(val)\n    }\n  }\n\n  const submitEventHandler = (e = null, answer = null) => {\n    if (e !== null) e.preventDefault()\n    let res = results\n    if (answer) {\n      res.push(answer)\n    } else {\n      res.push(mainField)\n    }\n    setResults(res)\n    setParentResults(res)\n    setMainField(\"\")\n    if (currAya + 1 === end) callback(res)\n    else setCurrAya(currAya => currAya + 1)\n  }\n  return (\n    <>\n      {start === currAya + 1 ? (\n        currAya === 0 ? (\n          <h4\n            style={{\n              direction: \"rtl\",\n              textAlign: \"center\",\n              marginBottom: \"0.5rem\",\n              marginTop: \"0.5rem\",\n            }}\n          >\n            بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيمِ\n          </h4>\n        ) : (\n          <h4\n            style={{\n              direction: \"rtl\",\n              textAlign: \"center\",\n              marginBottom: \"0.5rem\",\n              marginTop: \"0.5rem\",\n            }}\n          >\n            \"{surah.verses[currAya - 1][transcript]}\"\n          </h4>\n        )\n      ) : null}\n      <form\n        onSubmit={e => submitEventHandler(e)}\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        <div className=\"mainInput-group\">\n          {transcript ? null : (\n            <div onClick={e => submitEventHandler(e)} style={{ marginLeft: 0 }}>\n              <img\n                src=\"https://fonts.gstatic.com/s/i/materialicons/arrow_back/v6/24px.svg\"\n                style={{ margin: 0 }}\n              />\n            </div>\n          )}\n          <input\n            className={[\"mainInput\", correct ? \"correct\" : \"incorrect\"].join(\n              \" \"\n            )}\n            ref={inputRef}\n            value={mainField}\n            onChange={e => validator(e)}\n            dir={transcript ? \"ltr\" : \"rtl\"}\n            onBlur={() => {\n              inputRef.current.focus()\n            }}\n            autoFocus\n            autoCorrect=\"off\"\n          />\n\n          {transcript ? (\n            <div\n              onClick={e => submitEventHandler(e)}\n              style={{ marginRight: 0 }}\n            >\n              <img\n                src=\"https://fonts.gstatic.com/s/i/materialicons/arrow_forward/v6/24px.svg\"\n                style={{ margin: 0 }}\n              />\n            </div>\n          ) : null}\n        </div>\n      </form>\n    </>\n  )\n}\nexport default Prompt\n","import React, { useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { navigate } from \"gatsby\"\n\nimport Prompt from \"../components/prompt\"\n\nimport \"./main.css\"\n\nconst Test = ({ location }) => {\n  const surah = location.state?.surah\n  const start = location.state?.start\n  const end = location.state?.end\n  const askTranskript = location.state?.askTranskript\n  const [currAya, setCurrAya] = useState(start - 1)\n  const [results, setResults] = useState([])\n\n  if (location.state === null) {\n    navigate(\"/\")\n  } else {\n  }\n  const tr2no = tr => {\n    return tr ? 1 : 0\n  }\n  const callbackPrompt = res => {\n    navigate(\"/results/\", {\n      state: {\n        surah,\n        transcript: tr2no(askTranskript),\n        results: res,\n        start,\n        end,\n      },\n    })\n  }\n  const interrupt = () => {\n    navigate(\"/results/\", {\n      state: {\n        surah,\n        transcript: tr2no(askTranskript),\n        results: results,\n        start,\n        end: currAya - 1,\n      },\n    })\n  }\n  return (\n    <Layout>\n      <SEO title={surah?.nameTr ?? \"Surah\"} />\n      <div className=\"container\">\n        <h1>Surah:</h1>\n        <div className=\"current-score\">\n          <h3>{surah?.nameTr}</h3>\n          <h3>\n            {currAya + 1}/{end}\n          </h3>\n        </div>\n        <Prompt\n          surah={surah}\n          transcript={tr2no(askTranskript)}\n          start={start}\n          end={end}\n          callback={callbackPrompt}\n          currAya={currAya}\n          setCurrAya={setCurrAya}\n          setParentResults={setResults}\n        />\n        <div className=\"exit-button\">\n          <img\n            src=\"https://fonts.gstatic.com/s/i/materialicons/clear/v6/24px.svg?download=true\"\n            onClick={() => interrupt()}\n            alt=\"Exit\"\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport default Test\n"],"sourceRoot":""}